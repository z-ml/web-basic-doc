/**
*   在_themes.scss里面定义好自己需要的东西在该文件夹下面进行遍历和定义
**/
@import './index.scss';

//遍历主题map
@mixin themeify {
  @each $theme-name, $theme-map in $themes {
    //!global 把局部变量强升为全局变量
    $theme-map: $theme-map !global;
    //判断html的data-skin的属性值  #{}是sass的插值表达式
    //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
    [data-skin='#{$theme-name}'] & {
      @content;
    }
  }
}

//声明一个根据Key获取颜色的function
@function themed($key) {
  @return map-get($theme-map, $key);
}

@mixin background($color) {
  @include themeify {
    background: themed($color) !important;
  }
}

//获取background-color背景颜色
@mixin background_color($color) {
  @include themeify {
    background-color: themed($color) !important;
  }
}

//获取background背景颜色
@mixin background_gradient($color) {
  @include themeify {
    background: themed($color) !important;
  }
}

//获取字体颜色
@mixin font_color($color) {
  @include themeify {
    color: themed($color) !important;
  }
}

@mixin fill_text($color) {
  @include themeify {
    -webkit-text-fill-color: themed($color) !important;
  }
}

//获取边框颜色
@mixin border_color($color) {
  @include themeify {
    border-color: themed($color) !important;
  }
}

//获取边框颜色
@mixin border_gradient($color) {
  @include themeify {
    border-image: themed($color) !important;
  }
}

//获取边框颜色
@mixin border_bottom_color($color) {
  @include themeify {
    border-bottom-color: themed($color) !important;
  }
}

//获取边框颜色
@mixin border_top_color($color) {
  @include themeify {
    border-top-color: themed($color) !important;
  }
}

//获取边框颜色
@mixin border_left_color($color) {
  @include themeify {
    border-left-color: themed($color) !important;
  }
}

//获取边框颜色
@mixin border_right_color($color) {
  @include themeify {
    border-right-color: themed($color) !important;
  }
}

// 背景图片
@mixin background_image($url) {
  @include themeify {
    background-image: themed($url) !important;
  }
}

// 阴影
@mixin shadow($color) {
  @include themeify {
    box-shadow: themed($color) !important;
  }
}
